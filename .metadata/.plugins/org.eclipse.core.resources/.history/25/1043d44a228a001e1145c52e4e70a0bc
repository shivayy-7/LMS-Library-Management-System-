package com.aashdit.lms.utils;

import java.nio.charset.StandardCharsets;
import java.util.Base64;

import javax.crypto.Cipher;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;

public class AES {
	
	private static final String ALGORITHM = "AES";

//    public static String decrypt(String encryptedData, String key) throws Exception {
//        Cipher cipher = Cipher.getInstance(ALGORITHM);
//        SecretKey secretKey = new SecretKeySpec(key.getBytes(), ALGORITHM);
//        cipher.init(Cipher.DECRYPT_MODE, secretKey);
//        byte[] decryptedBytes = cipher.doFinal(Base64.getDecoder().decode(encryptedData));
//        return new String(decryptedBytes);
//    }
	
	public static String decrypt(String encryptedData, String key) throws Exception {
	    Cipher cipher = Cipher.getInstance(ALGORITHM);
	    SecretKey secretKey = new SecretKeySpec(key.getBytes(), ALGORITHM);
	    byte[] decodedBytes = Base64.getUrlDecoder().decode(encryptedData);
	    byte[] decryptedBytes = cipher.doFinal(decodedBytes);
	    return new String(decryptedBytes);
	}
}
